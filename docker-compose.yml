version: '3'
services:

  certificate_renewal:
    image: localhost:5000/certificate_renewal
    build:
      context: .
      dockerfile: _devops/certificate_renewal/Dockerfile
    restart: always
    volumes:
      - '/data/letsencrypt:/etc/letsencrypt'

  loadbalancing:
    image: localhost:5000/loadbalancing
    build:
      context: .
      dockerfile: _devops/loadbalancing/Dockerfile
    restart: always
    depends_on:
      - api
      - static
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/data/letsencrypt:/etc/letsencrypt'

  api:
    image: localhost:5000/api
    build:
      context: .
      dockerfile: _devops/api/Dockerfile
    depends_on:
      - mongodb
    env_file: secrets.env
    environment:
      MONGO_HOST: mongodb
    restart: always
    deploy:
      replicas: 8
      update_config:
        parallelism: 4

  worker:
    image: localhost:5000/worker
    build:
      context: .
      dockerfile: _devops/api/Dockerfile
    depends_on:
      - mongodb
    env_file: secrets.env
    environment:
      MONGO_HOST: mongodb
    restart: always
    deploy:
      replicas: 32
      update_config:
        parallelism: 8

  static:
    image: localhost:5000/static
    build:
      context: .
      dockerfile: _devops/static/Dockerfile
    restart: always
    deploy:
      replicas: 2
      update_config:
        parallelism: 1

  mongodb:
    image: mongo:3.4
    restart: always
    volumes:
      - '/data/mongodb/configdb:/data/configdb'
      - '/data/mongodb/db:/data/db'

  redis:
    image: redis:3.2-alpine
    restart: always
